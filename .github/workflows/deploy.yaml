name: Build and Push Docker Image to GCR

on:
  push:
    branches:
      - cloud-run
env:
  GCP_PROJECT_ID: genial-union-452320-a6
  REGION: us-east1
  REPO: apex
  IMAGE_NAME: apexapp
  INSTANCE_NAME: apex-engine     
  ZONE: us-east1-d          
  APP_PORT: 3000:3000  
  SERVICE_NAME: apexapp
  SECRET_NAME: a-secrets 

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Debug step before building to verify source files
      - name: Debug repository content
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Entrypoint.sh content:"
          cat entrypoint.sh

      - name: Set up Google Cloud Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
         
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2


      - name: Authenticate Docker to Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and tag Docker image
        run: |
          BUILD_NUMBER=${{ github.run_number }}
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest -t ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:$BUILD_NUMBER .

      # Debug step after building to verify image contents
      - name: Verify Docker image contents
        run: |
          echo "Listing root directory..."
          docker run --rm ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest ls -la /
          
          echo "Listing working directory..."
          docker run --rm ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest ls -la /app
          
          echo "Checking entrypoint.sh content..."
          docker run --rm ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest cat /app/wrapper.sh


      - name: Push Docker image to Artifact Registry
        run: |
          BUILD_NUMBER=${{ github.run_number }}
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:$BUILD_NUMBER

  
  deploy-to-cloud-run:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Set up Google Cloud Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
  
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 3000 \
            --set-secrets=ENV_VARS_JSON=a-secrets:latest \
            --cpu 1 \
            --memory 128 MiB
