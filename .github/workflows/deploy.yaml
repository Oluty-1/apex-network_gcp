name: Build and Push Docker Image to GCR

on:
  push:
    branches:
      - cloud-run
env:
  GCP_PROJECT_ID: genial-union-452320-a6
  REGION: us-east1
  REPO: apex
  IMAGE_NAME: apexapp
  INSTANCE_NAME: apex-engine     
  ZONE: us-east1-d          
  APP_PORT: 3000:3000  
  SERVICE_NAME: apexapp
  SECRET_NAME: a-secrets 

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Set up Google Cloud Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
         
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2


      - name: Authenticate Docker to Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and tag Docker image
        run: |
          BUILD_NUMBER=${{ github.run_number }}
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest -t ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:$BUILD_NUMBER .

      - name: Push Docker image to Artifact Registry
        run: |
          BUILD_NUMBER=${{ github.run_number }}
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:$BUILD_NUMBER


  deploy-to-cloud-run:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Set up Google Cloud Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
  
      - name: Deploy to Cloud Run
        run: |
          # Fetch secret keys from JSON
          # SECRET_JSON=$(gcloud secrets versions access latest --secret=${{ env.SECRET_NAME }} --project=${{ env.GCP_PROJECT_ID }})
          # SECRET_KEYS=$(echo "$SECRET_JSON" | jq -r 'keys[]')

  
          # Deploy with dynamic secrets
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 3000 \
            --set-env-vars "SECRET_NAME=duality-secrets,GCP_PROJECT=${{ env.GCP_PROJECT_ID }}"
            # --cpu 1 \
            # --memory 1Gi \
